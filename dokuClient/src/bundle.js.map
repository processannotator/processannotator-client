{"version":3,"sources":["ui.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["/* eslint no-alert:0*/\n'use strict'; /*eslint global-strict:0*/\n\n\nconst ipcRenderer = require('electron').ipcRenderer;\nconst SERVERADDR = '141.20.168.11';\nconst PORT = '80';\n\nvar localInfoDB, remoteInfoDB, localProjectDB, userDB, remoteProjectDB, localCachedUserDB;\nvar sync;\nvar ws; //websocket connection\n// require('./test').test();\n\nvar annotationElements = new Map();\n\n// DOM elements\nvar imageContainer;\nvar renderView;\n\nPolymer({\n\n\tis: 'process-annotator',\n\n\tproperties: {\n\n\n\t},\n\n\tobservers: [\n\t],\n\tattached: function () {\n\t\tthis.projects = [];\n\t\tthis.activeProject = {_id: 'collabdb', activeTopic: 'topic_1'};\n\t\tthis.remoteUrl = 'http://' + SERVERADDR + ':' + PORT;\n\t\tconsole.log(this.remoteUrl);\n\n\t\t\timageContainer = document.querySelector('.object-view');\n\t\t\trenderView = document.querySelector('render-view');\n\n\t\t\t// This is only a temporary DB, will be replaced once switchDB(dbname) is called soon.\n\t\t\tlocalInfoDB = new PouchDB('info');\n\t\t\tremoteInfoDB = new PouchDB(this.remoteUrl + '/info');\n\t\t\tlocalInfoDB.sync(remoteInfoDB, {live: true, retry: true });\n\t\t\tlocalInfoDB.changes({live: true, since: 'now'})\n\t\t\t.on('change', (info) => {\n\t\t\t\tconsole.log('local info DB changed!!');\n\t\t\t\treturn this.updateProjectList();\n\t\t\t})\n\t\t\t.on('error', function (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\n\n\t\t\tthis.updateProjectList();\n\t\t\t// Contains public user info (color, name) and is used for offline situations\n\t\t\t// and to reduce traffic.\n\t\t\tlocalCachedUserDB = new PouchDB('localCachedUserDB');\n\t\t\tuserDB = new PouchDB(this.remoteUrl + '/_users');\n\n\t\t\t// this.initWebsockets()\n\t\t\t// .then(() => console.log('websocket succesfully connected'))\n\t\t\t// .catch(err => console.error(err));\n\n\t\t\tthis.loadPreferences().then(() => {\n\t\t\t\tconsole.log('Loaded preferences.');\n\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\tif(this.activeProfile === ''){\n\t\t\t\t\t\tconsole.log('NO ACTIVE PROFIL found in the preferences! creating one now.');\n\n\t\t\t\t\t\tlet profileOverlay = document.querySelector('#profileSetupOverlay');\n\n\t\t\t\t\t\tprofileOverlay.addEventListener('iron-overlay-closed', (e) => {\n\t\t\t\t\t\t\tthis.setNewProfile({\n\t\t\t\t\t\t\t\tprename: profileOverlay.prename,\n\t\t\t\t\t\t\t\tsurname: profileOverlay.surname,\n\t\t\t\t\t\t\t\tcolor: profileOverlay.color,\n\t\t\t\t\t\t\t\temail: profileOverlay.email\n\t\t\t\t\t\t\t}).then((result) => resolve(this.activeProfile));\n\t\t\t\t\t\t});\n\t\t\t\t\t\tprofileOverlay.open();\n\n\t\t\t\t\t} else if(this.activeProfile !== undefined) {\n\t\t\t\t\t\tresolve(this.activeProfile);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t}).then(() => {\n\t\t\t\tconsole.log('ok, loaded or created the active profile. Now check if there is an active project');\n\t\t\t\tconsole.log(this.activeProject);\n\t\t\t\tif(this.activeProject === undefined || Object.keys(this.activeProject).length === 0) {\n\t\t\t\t\tthis.projectOpened = false;\n\t\t\t\t\tconsole.log('NO ACTIVE PROFILE YET!');\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('loaded a project, show the renderview');\n\t\t\t\t\tthis.projectOpened = true;\n\t\t\t\t\treturn this.switchProjectDB(this.activeProject);\n\t\t\t\t}\n\n\n\t\t\t}).then(() => {\n\n\t\t\t\tconsole.log('continue');\n\t\t\t\tthis.updateElements({updateFile: true});\n\t\t\t});\n\n\t\t\twindow.addEventListener('resize', this.handleResize.bind(this));\n\t\t\twindow.addEventListener('keyup', this.keyUp.bind(this));\n\n\n\t},\n\n\tswitchProjectDB: function(newProject) {\n\n\t\tconsole.log('switch project DB');\n\n\t\t// TODO: check if dname is a valid database name for a project\n\t\tthis.activeProject = newProject;\n\t\tthis.annotations = [];\n\t\tconsole.log('switch to projectDB with name', this.activeProject);\n\n\t\tlocalProjectDB = new PouchDB(this.activeProject._id, {adapter: 'worker'});\n\t\tremoteProjectDB = new PouchDB(this.remoteUrl + '/' + this.activeProject._id, {adapter: 'worker'});\n\n\t\tthis.savePreferences();\n\n\t\t// perhaps also on change localInfoDB to rebuildAnnotation elements?\n\t\tsync = PouchDB.sync(localProjectDB, remoteProjectDB, {\n\t\t\tlive: true,\n\t\t\tretry: true\n\t\t}).on('change', function(info) {\n\t\t\t// console.log('sync change!!');\n\t\t\t// console.log(info);\n\t\t\t// // TODO: implement function that only updates elements that changed\n\t\t\t// this.updateElements(info.change.docs);\n\n\t\t}).on('paused', (info) => {\n\t\t\tconsole.log('sync pause', info);\n\n\t\t\t// replication paused (e.g. user went offline)\n\t\t}).on('active', () => {\n\t\t\tconsole.log('sync active');\n\n\t\t\t// replicate resumed (e.g. user went back online)\n\t\t}).on('denied', info => {\n\t\t\tconsole.log('sync denied');\n\n\t\t\t// a document failed to replicate, e.g. due to permissions\n\t\t}).on('complete', info => {\n\t\t\tconsole.log('sync complete');\n\t\t\tconsole.log(info);\n\n\t\t\t// handle complete\n\t\t}).on('error', err => {\n\t\t\tconsole.log('sync error');\n\t\t\t// handle error\n\t\t});\n\n\t\tlocalProjectDB.changes({live: true, since: 'now', include_docs: true})\n\t\t.on('change', (info) => {\n\t\t\tconsole.log('change, info:', info);\n\t\t\t// only update also the file (for the renderer) if it's not an annotation\n\t\t\tlet updateFile = false;\n\t\t\tif(info.doc.type !== 'annotation') {\n\t\t\t\tupdateFile = true;\n\t\t\t}\n\t\t\t// Reduce calls to this.updateElements if there are many simultaneous changes!\n\t\t\t// Therefore only update every 30ms\n\t\t\t// This would not be valid if we only actually update individual elements from changes,\n\t\t\t// as we would have to notify updateElements about the actual changed docs. this is not true yet\n\t\t\t// and may never be, just wanted to note this here in case we ever decide to do so:)\n\t\t\tthis.updateTimeout = setTimeout(() => {\n\t\t\t\tthis.updateElements({updateFile: updateFile});\n\t\t\t}, 30);\n\n\t\t})\n\t\t.on('complete', function(info) {\n\t\t\tconsole.log('complete');\n\t\t}).on('error', function (err) {\n\t\t\tconsole.log(err);\n\n\t\t});\n\n\t\tlocalProjectDB.get('info').then(info => {\n\t\t\tconsole.log('info', info);\n\t\t\tthis.activeProject.activeTopic = info.activeTopic;\n\n\t\t\tthis.updateElements({updateFile: true});\n\t\t});\n\n\t\t// TODO: this.switchTopic().then(() => {\n\t\t//  this.updateElements\n\t\t// })\n\n\t\treturn sync;\n\t},\n\taddTopic: function() {\n\t\t// add new topic to active project\n\t\treturn localProjectDB.put({\n\t\t\t_id: 'topic_' + 1,\n\t\t\ttype: 'topic',\n\t\t\tparentProject: this.activeProject._id,\n\t\t\tcreator: this.activeProfile.name,\n\t\t\tcreationDate: new Date().toISOString(),\n\t\t\ttitle: 'a topic title',\n\t\t\tdescription: 'a description to a topic'\n\t\t});\n\t},\n\n\t// this is an event handler, triggering on enter-key event in renderview\n\taddAnnotation: function({detail: {description='', position={x: 0, y: 0, z: 0}, cameraPosition={x: 0, y: 0, z: 0}, cameraRotation={x: 0, y: 0, z: 0}, cameraUp={x: 0, y: 0, z: 0}, polygon=[]}}) {\n\t\tconsole.log('about to add annotation to', this.activeProject._id);\n\n\t\tlet annotation = {\n\t\t\t_id: 'annotation_' + new Date().toISOString(),\n\t\t\ttype: 'annotation',\n\t\t\tparentProject: this.activeProject._id,\n\t\t\tparentTopic: this.activeProject.activeTopic,\n\t\t\tparentObject: this.activeObject_id,\n\t\t\tcreator: this.activeProfile.name,\n\t\t\tcreationDate: new Date().toISOString(),\n\t\t\tcameraPosition,\n\t\t\t// cameraRotation,\n\t\t\tcameraUp,\n\t\t\tdescription,\n\t\t\tposition,\n\t\t\tpolygon\n\t\t};\n\n\t\tconsole.log('about to add an annotation!');\n\t\treturn localProjectDB.put(annotation).then((result) => {\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t});\n\t},\n\tlogin: function(user, password) {\n\t\treturn userDB.login(user, password);\n\t},\n\tloadPreferences: function() {\n\n\t\treturn localInfoDB.get('_local/lastSession')\n\t\t.then((preferences) => {\n\t\t\tconsole.log('preferences loaded?');\n\t\t\tif(preferences !== undefined) {\n\t\t\t\tconsole.log('setting active profile, project and topic from local preferences');\n\t\t\t\tconsole.log(preferences);\n\t\t\t\tthis.preferences = preferences;\n\t\t\t\tthis.activeProfile = preferences.activeProfile;\n\t\t\t\tthis.activeProject = preferences.activeProject;\n\t\t\t}\n\t\t\tif (preferences === undefined) {\n\t\t\t\tthrow\tnew Error('preferences missing, this error shouldnt hthisen at all!');\n\t\t\t\t// because if preferences is undefined, it should have thrown an error before!\n\t\t\t}\n\n\t\t\t// try to login to profile thats saved in preferences info from remote server\n\t\t\t// to get up-to-date profile info and save it later\n\t\t\treturn this.login(preferences.activeProfile.name, preferences.activeProfile.password);\n\t\t})\n\t\t.then(response => {\n\t\t\treturn userDB.getSession();\n\t\t})\n\t\t.then(response => {\n\t\t\tif(!response.userCtx.name){\n\t\t\t\tconsole.error('Couldnt get user session: hmm, nobody logged on.');\n\t\t\t}\n\t\t\t// got session, that means login works and user remains logged in, get more userInfo now.\n\t\t\treturn userDB.getUser(this.activeProfile.name);\n\t\t})\n\t\t.then(updatedProfile => {\n\t\t\t// use fresh profile info to set local profile (eg. when user logged in from other device and changed colors etc.)\n\t\t\tthis.activeProfile = Object.assign(updatedProfile, this.activeProfile);\n\t\t\treturn this.preferences;\n\t\t})\n\t\t.catch((err) => {\n\t\t\tif(err.message === 'missing'){\n\t\t\t\tconsole.log('no preferences yet, creating template.');\n\t\t\t\treturn localInfoDB.put({\n\t\t\t\t\t_id: '_local/lastSession',\n\t\t\t\t\tprojects: [],\n\t\t\t\t\tactiveProfile: '',\n\t\t\t\t\tactiveProject: {}\n\t\t\t\t})\n\t\t\t\t.then((result) => {\n\t\t\t\t\t//trying to reload preferences after setting fresh initial one.\n\t\t\t\t\treturn this.loadPreferences();\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconsole.error('possible no internet connection, just use offline data for now', err);\n\t\t\t\treturn this.preferences;\n\t\t\t}\n\n\t\t});\n\n\t},\n\tsavePreferences: function() {\n\t\tconsole.log('saving preferences...');\n\t\t// _local/lastSession should exist because loadPreferences creates it.\n\n\t\treturn localInfoDB.get('_local/lastSession').then(doc => {\n\t\t\tconsole.log('getting lastSession for saving:', doc);\n\t\t\tdoc.activeProfile = this.activeProfile;\n\t\t\tdoc.activeProject = this.activeProject;\n\t\t\treturn localInfoDB.put(doc);\n\t\t})\n\t\t.then((result) => {\n\t\t\tconsole.log('saved preferences.', result);\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log('error in saving prefs');\n\t\t\tconsole.log(err);\n\t\t});\n\n\t},\n\tsetNewProfile: function({prename, surname, email, color}) {\n\n\t\tlet metadata = {\n\t\t\tsurname: surname,\n\t\t\tprename: prename,\n\t\t\temail: email,\n\t\t\tcolor: color,\n\t\t\tcreationDate: new Date().toISOString()\n\t\t};\n\n\t\tlet name = metadata.prename + metadata.surname;\n\t\t// TODO: this is only a testing password for all users\n\t\tlet password = 'thisisasupersecrettestingpassworduntilthebeta';\n\n\t\t// Then set the current active profile to the new profile.\n\t\tthis.activeProfile = {name: name, password, metadata};\n\t\t// FIXME: will be problematic when doing an offline \"signup\"\n\t\t// will need to redo the signup once possible\n\n\t\t// Before trying any network stuff, save preferences with locally created profile.\n\t\treturn this.savePreferences()\n\t\t.then(() => {\n\t\t\t// The testkey is necessary, otherwise the user will get deleted and won't get the proper db role.\n\t\t\tmetadata.testkey = 'testuserkey';\n\t\t\tmetadata.projects = [];\n\t\t\tconsole.log('signing up');\n\t\t\treturn userDB.signup( name, password, {metadata} );\n\t\t})\n\t\t.then((response) => userDB.login(name, password))\n\t\t.then((response) => {\n\t\t\tconsole.log('succesfully created user and logged in.', response);\n\t\t\treturn userDB.getUser(name);\n\t\t})\n\t\t.then((response) => {\n\t\t\tthis.activeProfile = Object.assign(this.activeProfile, response);\n\t\t})\n\t\t.catch(err => console.error(err));\n\t},\n\tsetNewProject: function({projectname, topicname, file, emails}) {\n\t\t// Assumes current activeProfile as the creator.\n\t\t// We will create a new db for the project.\n\t\t// However, only server admins are allowed to create db's in couchdb,\n\t\t// so we are sending a message via websockets to let the server create the DB.\n\n\t\t// FIXME: create some kind of queue in the preferences to send out the request\n\t\t// at a later time when the server is offline.\n\n\t\tfunction normalizeCouchDBName(name) {\n\t\t\treturn name.toLowerCase().replace(/\\s+/g, '-').replace(/[^a-z0-9_$()+/-]/g, '$');\n\t\t}\n\n\t\tfunction annotationWithCreatorProfile(doc) {\n\t\t\tconsole.log('doc');\n\t\t\tif(doc.creator === this.activeProfile.name)\n\t\t\treturn localCachedUserDB.get(doc.creator)\n\t\t\t.then(profile => {\n\t\t\t\tdoc.creatorProfile = profile;\n\t\t\t\treturn doc;\n\t\t\t}).catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tdoc.creatorProfile = {};\n\t\t\t\treturn doc;\n\t\t\t});\n\t\t}\n\n\t\tlet topicID = 'topic_' + topicname;\n\t\tlet newProjectDescription = {\n\t\t\t_id: 'project_' + (Date.now()) + '_' + normalizeCouchDBName(projectname),\n\t\t\tname: projectname,\n\t\t\tactiveTopic: topicID\n\t\t};\n\n\t\tuserDB.getUser(this.activeProfile.name).then((response) => {\n\t\t\t// Save intend of user to create new DB into it's 'projects' field.\n\t\t\t// This field will get read on the server, which decices wether to create a\n\t\t\t// DB for it.\n\n\n\n\n\t\t\tresponse.projects.push(newProjectDescription._id);\n\t\t\treturn userDB.putUser(\n\t\t\t\tthis.activeProfile.name,\n\t\t\t\t{metadata: {projects: response.projects}}\n\t\t\t);\n\t\t}).then(() => {\n\t\t\tthis.projectOpened = true;\n\t\t\tlocalInfoDB.get('projectsInfo').then((doc) => {\n\t\t\t\tdoc.projects.push(newProjectDescription);\n\t\t\t\treturn localInfoDB.put(doc);\n\t\t\t}).catch((err) => {\n\t\t\t\tif(err.status === 404) {\n\t\t\t\t\treturn localInfoDB.put({_id: 'projectsInfo', projects: [newProjectDescription]});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.push('projects', newProjectDescription);\n\t\t\t// independently of internet connection and remote DB already create local DB\n\t\t\t// and add first topic with object/file\n\t\t\treturn new PouchDB(newProjectDescription._id).bulkDocs(\n\t\t\t\t[{\n\t\t\t\t\t_id: 'info',\n\t\t\t\t\tname: projectname,\n\t\t\t\t\tactiveTopic: topicID\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t_id: 'topic_' + topicname,\n\t\t\t\t\t_attachments: {\n\t\t\t\t\t\t'file': { type: file.type, data: file, something: 'else'}\n\t\t\t\t\t}\n\t\t\t\t}]);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\treturn this.switchProjectDB(newProjectDescription);\n\t\t\t})\n\t\t\t.then((result) => {\n\t\t\t\tthis.activeProject.activeTopic = topicID;\n\t\t\t\tthis.updateElements({updateFile: true});\n\t\t\t})\n\t\t\t.catch(function (err) {\n\t\t\t\tconsole.log('something went wrong creating the new project db');\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t\t},\n\n\t\t// Get all annotation of current project.\n\t\t// 1. Update localCachedUserDB based in annotation creators (if userDB is available)\n\t\t// 2. Use localCachedUserDB to add profile info (color, name) to annotation.\n\t\t// 3. return updated annotations.\n\t\tgetAnnotations: function() {\n\t\t\tif(localProjectDB === undefined) return false;\n\t\t\tlet creators = new Set();\n\t\t\tlet updatedCreators = new Set();\n\t\t\tlet annotations;\n\n\n\t\t\treturn localProjectDB.allDocs({\n\t\t\t\tinclude_docs: true,\n\t\t\t\tstartkey: 'annotation',\n\t\t\t\tendkey: 'annotation\\uffff'\n\t\t\t})\n\t\t\t.then(result => {\n\t\t\t\tannotations = result.rows;\n\t\t\t\tlet promiseUserUpdates = [];\n\t\t\t\tlet updatedAnnotations = [];\n\t\t\t\t// now fetch the profile of the annotation creator and try to get it from userDB\n\t\t\t\t// to update the localCachedUserDB.\n\t\t\t\t// Collect all creator names and fetch them from localCachedUserDB\n\t\t\t\t// for (let {doc: {creator}} of annotations) {\n\t\t\t\t// \tcreators.add(creator);\n\t\t\t\t// }\n\t\t\t\t// TODO:\n\t\t\t\t// HACK! This is inefficient. In future update localCachedUserDB periodically (try every 10 mins?)\n\t\t\t\t// And update annotations only from local cache\n\t\t\t\tfor (let {doc} of annotations) {\n\t\t\t\t\tlet updatedAnnotation = userDB.getUser(doc.creator).then((creatorProfile) => {\n\t\t\t\t\t\tlet {color, surname, prename} = creatorProfile;\n\t\t\t\t\t\tdoc.creatorProfile = creatorProfile;\n\n\t\t\t\t\t\t// also update localCachedUserDB if not done yet.\n\t\t\t\t\t\tif(updatedCreators.has(doc.creator) === false) {\n\t\t\t\t\t\t\tupdatedCreators.add(doc.creator);\n\t\t\t\t\t\t\tlocalCachedUserDB.get(doc.creator).then((cachedProfile) => {\n\t\t\t\t\t\t\t\tcachedProfile.color = color;\n\t\t\t\t\t\t\t\tcachedProfile.surname = surname;\n\t\t\t\t\t\t\t\tcachedProfile.prename = prename;\n\t\t\t\t\t\t\t\treturn localCachedUserDB.put(cachedProfile);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\t\t\t// No local cache of user info yet, cache it now!\n\t\t\t\t\t\t\t\tif(err.status === 404) {\n\t\t\t\t\t\t\t\t\tconsole.log('No local cache of user info yet, cache it now!');\n\t\t\t\t\t\t\t\t\treturn localCachedUserDB.put({_id: doc.creator, color, surname, prename});\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn doc;\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\tconsole.log('try to get from localCache');\n\t\t\t\t\t\t// Try to get creatorProfile from cache instead.\n\t\t\t\t\t\tconsole.log(doc.creator);\n\t\t\t\t\t\treturn localCachedUserDB.get(doc.creator).then((creatorProfile) => {\n\t\t\t\t\t\t\tconsole.log(creatorProfile);\n\t\t\t\t\t\t\tdoc.creatorProfile = creatorProfile;\n\t\t\t\t\t\t\treturn doc;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((err_) => {\n\t\t\t\t\t\t\tconsole.error(err_);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\tupdatedAnnotations.push(updatedAnnotation);\n\t\t\t\t}\n\t\t\t\treturn Promise.all(updatedAnnotations);\n\t\t\t});\n\t\t},\n\t\tonAnnotationEdit: function(evt) {\n\t\t\t// emitted when user edits text in annotationbox and hits enter\n\t\t\tlocalProjectDB.get(evt.detail.newAnnotation._id).then(doc => {\n\t\t\t\tdoc.description = evt.detail.newAnnotation.description;\n\t\t\t\treturn localProjectDB.put(doc).then((value) => {});\n\t\t\t\t// after put into DB, DB change event should be triggered automatically to update\n\t\t\t});//.then(() => {updateElements()})\n\t\t},\n\t\tupdateElements: function(options) {\n\t\t\tif(localProjectDB === undefined) return;\n\n\t\t\tif((options.updateFile && options.updateFile === true)) {\n\t\t\t\tlocalProjectDB.get('info')\n\t\t\t\t.then((doc) => localProjectDB.getAttachment(doc.activeTopic, 'file'))\n\t\t\t\t.then(blob => {\n\t\t\t\t\trenderView.file = blob;\n\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.getAnnotations().then(annotations => {\n\t\t\t\tthis.annotations = annotations;\n\t\t\t});\n\t\t},\n\t\thandleResize: function(event) {\n\t\t\tif(renderView) {\n\t\t\t\trenderView.resize();\n\t\t\t}\n\t\t},\n\t\tkeyUp: function(evt) {\n\t\t\t// if(evt.keyCode === 189){\n\t\t\t// \tconsole.log('complete reset');\n\t\t\t// \tcompleteReset();\n\t\t\t// }\n\t\t},\n\n\t\t// this.initWebsockets: function() {\n\t\t// \treturn new Promise((resolve, reject) => {\n\t\t//\n\t\t// \t\tws = new WebSocket('ws://' + SERVERADDR + ':7000', ['protocolbla']);\n\t\t//\n\t\t// \t\tws.onopen: function (event) {\n\t\t// \t\t\tresolve(ws);\n\t\t// \t\t};\n\t\t//\n\t\t// \t\tws.onmessage: function (event) {\n\t\t// \t\t\tlet msg = JSON.parse(event.data);\n\t\t// \t\t\tswitch (msg.type) {\n\t\t// \t\t\t\tcase '':\n\t\t// \t\t\t\tlet e = new CustomEvent('db-' + msg.projectname + '-created', {detail: msg});\n\t\t//\n\t\t// \t\t\t\tconsole.log('attention, dispatching event', ('db-' + msg.projectname + '-created'), '!');\n\t\t// \t\t\t\tthis.dispatchEvent(e);\n\t\t// \t\t\t\tbreak;\n\t\t// \t\t\t\tdefault:\n\t\t// \t\t\t\tconsole.log('unknown websockets event:', msg);\n\t\t// \t\t\t}\n\t\t// \t\t};\n\t\t// \t});\n\t\t//\n\t\t// };\n\n\t\tcreateProject: function() {\n\t\t\tlet projectOverlay = document.querySelector('#projectSetupOverlay');\n\t\t\tprojectOverlay.addEventListener('iron-overlay-closed', (e) => {\n\n\t\t\t\tthis.setNewProject({\n\t\t\t\t\tprojectname: projectOverlay.projectname,\n\t\t\t\t\ttopicname: projectOverlay.topicname,\n\t\t\t\t\tfile: projectOverlay.file,\n\t\t\t\t\temails: ['bla']\n\t\t\t\t});\n\n\t\t\t});\n\t\t\tprojectOverlay.open();\n\t\t},\n\n\t\tupdateProjectList: function () {\n\t\t\treturn localInfoDB.get('projectsInfo').then((doc) => {\n\t\t\t\tthis.set('projects', doc.projects);\n\t\t\t}).catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t\t},\n\t\ttoggleDashboard: function (e) {\n\t\t\tconsole.log('toggle dashboard');\n\n\t\t\tthis.$.dashboard.toggle();\n\t\t\tthis.$.projectMenuItem.classList.toggle('selected');\n\t\t\tconsole.log(this.$.dashboard);\n\n\t\t},\n\t\tswitchProject: function (e) {\n\t\t\tthis.switchProjectDB(e.detail);\n\t\t},\n\n\t\tresetLocalDB: function (e) {\n\t\t\tipcRenderer.send('asynchronous-message', 'resetLocalDB');\n\t\t},\n\n\t\tmouseOutAnnotationLabel: function (e) {\n\t\t\tclearTimeout(this.labelHoverTimeout);\n\t\t},\n\n\t\tmouseOverAnnotationLabel: function (e) {\n\t\t\tthis.labelHoverTimeout = setTimeout(() => {\n\t\t\t\tlet index = this.annotations.findIndex((annotation) => annotation._id === e.detail);\n\t\t\t\tthis.$.annotationList.scrollToIndex(index);\n\t\t\t}, 500);\n\t\t},\n\n\t\tannotationSelected: function (e) {\n\t\t\tif(this.selectedAnnotation === undefined || this.selectedAnnotation === null) return;\n\t\t\trenderView.focusAnnotation(this.selectedAnnotation);\n\t\t}\n\n\n\n\t});\n\n\t/////////////////////////////////////////////\n\t// OLD STUFF down there. maybe useful later!?\n\t/////////////////////////////////////////////\n\n\t//\n\t// ipcRenderer.on('asynchronous-reply', function(event, arg) {\n\t//   console.log(arg); // prints \"pong\"\n\t// });\n"]}